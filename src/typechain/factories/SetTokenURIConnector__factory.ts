/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SetTokenURIConnector,
  SetTokenURIConnectorInterface,
} from "../SetTokenURIConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_authoriser",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "authoriser",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516106f43803806106f48339818101604052602081101561003357600080fd5b5051606081901b6001600160601b0319166080526001600160a01b031661068861006c60003980610373528061060c52506106886000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634ed093301461003b578063dedc5a82146100f1575b600080fd5b6100ef6004803603608081101561005157600080fd5b81019060208101813564010000000081111561006c57600080fd5b82018360208201111561007e57600080fd5b803590602001918460018302840111640100000000831117156100a057600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505060ff8335169350505060208101359060400135610122565b005b6100f961060a565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b600061012c61062e565b6004810154815491925073ffffffffffffffffffffffffffffffffffffffff9182169116146101bc57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600360248201527f4641320000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60006040518060400160405280601c81526020017f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152503087604051602001808373ffffffffffffffffffffffffffffffffffffffff1660601b815260140182805190602001908083835b6020831061026557805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101610228565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052805190602001206040516020018083805190602001908083835b602083106102f157805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe090920191602091820191016102b4565b51815160209384036101000a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0180199092169116179052920193845250604080518085038152848301808352815191840191909120600090915281850180835281905260ff8b166060860152608085018a905260a0850189905290519095507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16945060019360c080820194507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0830192918290030190855afa1580156103f2573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff161461047e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f496e76616c696420617574686f7269736572207369676e617475726500000000604482015290519081900360640190fd5b61048661062e565b60020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634da1caef6040518163ffffffff1660e01b815260040160206040518083038186803b1580156104ef57600080fd5b505afa158015610503573d6000803e3d6000fd5b505050506040513d602081101561051957600080fd5b50516040517f0675b7c600000000000000000000000000000000000000000000000000000000815260206004820181815289516024840152895173ffffffffffffffffffffffffffffffffffffffff90941693630675b7c6938b9383926044909201919085019080838360005b8381101561059e578181015183820152602001610586565b50505050905090810190601f1680156105cb5780820380516001836020036101000a031916815260200191505b5092505050600060405180830381600087803b1580156105ea57600080fd5b505af11580156105fe573d6000803e3d6000fd5b50505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7fadbb89e904f74d44d0d104c851da4f2fa24de8f1dee64f038923bb940f37d53a9056fea2646970667358221220a31c478cb959b15ecf53cf3c9b2f9a79b5faaa786ae26c8dfa724fcf210740c064736f6c634300060c0033";

export class SetTokenURIConnector__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _authoriser: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SetTokenURIConnector> {
    return super.deploy(
      _authoriser,
      overrides || {}
    ) as Promise<SetTokenURIConnector>;
  }
  getDeployTransaction(
    _authoriser: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_authoriser, overrides || {});
  }
  attach(address: string): SetTokenURIConnector {
    return super.attach(address) as SetTokenURIConnector;
  }
  connect(signer: Signer): SetTokenURIConnector__factory {
    return super.connect(signer) as SetTokenURIConnector__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SetTokenURIConnectorInterface {
    return new utils.Interface(_abi) as SetTokenURIConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SetTokenURIConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SetTokenURIConnector;
  }
}
