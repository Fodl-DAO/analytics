/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ConstantFaucet,
  ConstantFaucetInterface,
} from "../ConstantFaucet";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_fodl",
        type: "address",
      },
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_startTime",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOTAL_FODL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "amountDistributed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "distributeFodl",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "finishTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fodl",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "target",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61010060405234801561001157600080fd5b5060405161093c38038061093c8339818101604052608081101561003457600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291905050508373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508273ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508173ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508060018190555061012a6305a39a808261013a60201b6104b71790919060201c565b60e08181525050505050506101c2565b6000808284019050838110156101b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60805160601c60a05160601c60c05160601c60e0516107286102146000398061020152806104475250806103425280610495525080610321528061046b5250806102e5528061042352506107286000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806328c18c241161006657806328c18c24146101105780635958611e1461014457806361d027b314610162578063c8f33c9114610196578063d4b83992146101b457610093565b806315b1332914610098578063193f660c146100b657806319b6beb4146100d45780631be05289146100f2575b600080fd5b6100a06101e8565b6040518082815260200191505060405180910390f35b6100be6101f7565b6040518082815260200191505060405180910390f35b6100dc6101fd565b6040518082815260200191505060405180910390f35b6100fa610419565b6040518082815260200191505060405180910390f35b610118610421565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61014c610445565b6040518082815260200191505060405180910390f35b61016a610469565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61019e61048d565b6040518082815260200191505060405180910390f35b6101bc610493565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6a295be96e6406697200000081565b60005481565b60007f00000000000000000000000000000000000000000000000000000000000000004210610294576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f466175636574206578706972656421000000000000000000000000000000000081525060200191505060405180910390fd5b60006102ab6001544261053f90919063ffffffff16565b90506102e16305a39a806102d36a295be96e64066972000000846105c290919063ffffffff16565b61064890919063ffffffff16565b91507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156103d257600080fd5b505af11580156103e6573d6000803e3d6000fd5b505050506040513d60208110156103fc57600080fd5b810190808051906020019092919050505050426001819055505090565b6305a39a8081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60015481565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080828401905083811015610535576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000828211156105b7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b818303905092915050565b6000808314156105d55760009050610642565b60008284029050828482816105e657fe5b041461063d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806106d26021913960400191505060405180910390fd5b809150505b92915050565b60008082116106bf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b8183816106c857fe5b0490509291505056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220b2c826740e0eb35c5a0a215d3c0b5f4b3379b6f2e6db7b314d75f2fd55c835f864736f6c634300060c0033";

export class ConstantFaucet__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _fodl: string,
    _treasury: string,
    _target: string,
    _startTime: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ConstantFaucet> {
    return super.deploy(
      _fodl,
      _treasury,
      _target,
      _startTime,
      overrides || {}
    ) as Promise<ConstantFaucet>;
  }
  getDeployTransaction(
    _fodl: string,
    _treasury: string,
    _target: string,
    _startTime: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _fodl,
      _treasury,
      _target,
      _startTime,
      overrides || {}
    );
  }
  attach(address: string): ConstantFaucet {
    return super.attach(address) as ConstantFaucet;
  }
  connect(signer: Signer): ConstantFaucet__factory {
    return super.connect(signer) as ConstantFaucet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConstantFaucetInterface {
    return new utils.Interface(_abi) as ConstantFaucetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConstantFaucet {
    return new Contract(address, _abi, signerOrProvider) as ConstantFaucet;
  }
}
