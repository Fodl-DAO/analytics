/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PNLConnector, PNLConnectorInterface } from "../PNLConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "priceTarget",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fixedReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "percentageReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unwindFactor",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isTakeProfit",
        type: "bool",
      },
    ],
    name: "configurePNL",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "withApproval",
        type: "bool",
      },
    ],
    name: "executePNL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllPNLSettings",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "priceTarget",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fixedReward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "percentageReward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unwindFactor",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isTakeProfit",
            type: "bool",
          },
        ],
        internalType: "struct PNLSettings[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getPNLSettingsAt",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "priceTarget",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fixedReward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "percentageReward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unwindFactor",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isTakeProfit",
            type: "bool",
          },
        ],
        internalType: "struct PNLSettings",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getPNLState",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "priceOfBorrowToken",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "priceOfSupplyToken",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "supplyBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowBalance",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "platform",
            type: "address",
          },
          {
            internalType: "address",
            name: "borrowToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "supplyToken",
            type: "address",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "canBeTriggered",
                type: "bool",
              },
              {
                internalType: "string",
                name: "reason",
                type: "string",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "priceTarget",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "fixedReward",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "percentageReward",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "unwindFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "bool",
                    name: "isTakeProfit",
                    type: "bool",
                  },
                ],
                internalType: "struct PNLSettings",
                name: "settings",
                type: "tuple",
              },
            ],
            internalType: "struct IPNLConnector.PNLSimulations[]",
            name: "simulations",
            type: "tuple[]",
          },
        ],
        internalType: "struct IPNLConnector.PNLState",
        name: "state",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeAllPNLSettings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "removePNLSetting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611da2806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063b0836f6e1161005b578063b0836f6e146100c8578063b4e8eaf3146100dd578063df307da8146100e5578063f64b1350146101055761007d565b80634e62e5d21461008257806351d6fe581461009757806354e87c20146100aa575b600080fd5b6100956100903660046116a6565b610125565b005b6100956100a5366004611647565b6103be565b6100b2610416565b6040516100bf91906118a8565b60405180910390f35b6100d06104ab565b6040516100bf9190611c7a565b61009561090a565b6100f86100f3366004611647565b61096b565b6040516100bf9190611c6c565b610118610113366004611677565b6109de565b6040516100bf9190611d02565b600061012f610c79565b6004810154815491925073ffffffffffffffffffffffffffffffffffffffff9182169116146101795760405162461bcd60e51b815260040161017090611909565b60405180910390fd5b610181610c9d565b61019d5760405162461bcd60e51b815260040161017090611ba1565b670de0b6b3a76400008311156101c55760405162461bcd60e51b815260040161017090611ad6565b670de0b6b3a76400008411156101ed5760405162461bcd60e51b815260040161017090611a0b565b6101f561147c565b6101fd610cc6565b60408051608081018252825473ffffffffffffffffffffffffffffffffffffffff908116808352600185015482166020840152600285015490911692820192909252600390920154606083015290915060009061025990610cea565b905083156102c4576102748183600001518460400151610d9b565b610299670de0b6b3a76400006102938486600001518760200151610d9b565b90610e5a565b816102a057fe5b0488116102bf5760405162461bcd60e51b815260040161017090611a42565b61031c565b6102d78183600001518460400151610d9b565b6102f6670de0b6b3a76400006102938486600001518760200151610d9b565b816102fd57fe5b04881061031c5760405162461bcd60e51b815260040161017090611a42565b610324610e94565b6040805160a081018252998a526020808b01998a52908a0197885260608a0196875294151560808a0190815281546001808201845560009384529690922099516005909202909901908155965193870193909355505091516002840155516003830155509051600490910180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b60006103c8610c79565b6004810154815491925073ffffffffffffffffffffffffffffffffffffffff9182169116146104095760405162461bcd60e51b815260040161017090611909565b61041282610eb8565b5050565b6060610420610e94565b80546040805160208084028201810190925282815292919060009084015b828210156104a15760008481526020908190206040805160a081018252600586029092018054835260018082015484860152600282015492840192909252600381015460608401526004015460ff1615156080830152908352909201910161043e565b5050505090505b90565b6104b36114a3565b6104bb61147c565b6104c3610cc6565b60408051608081018252825473ffffffffffffffffffffffffffffffffffffffff90811682526001840154811660208301526002840154169181019190915260039091015460608201529050610517610c9d565b61052157506104a8565b606061052b610e94565b80546040805160208084028201810190925282815292919060009084015b828210156105ac5760008481526020908190206040805160a081018252600586029092018054835260018082015484860152600282015492840192909252600381015460608401526004015460ff16151560808301529083529092019101610549565b5050845173ffffffffffffffffffffffffffffffffffffffff90811660808801526020860151811660c088015260408601511660a087015250508251909150610604906105f890610cea565b83516020850151611013565b604084015281516106249061061890610cea565b83516040850151611035565b606084015281516106449061063890610cea565b83516040850151610d9b565b835281516106619061065590610cea565b83516020850151610d9b565b6020840152805167ffffffffffffffff8111801561067e57600080fd5b506040519080825280602002602001820160405280156106b857816020015b6106a561152a565b81526020019060019003908161069d5790505b5060e084015282516020840151600091906106db90670de0b6b3a7640000610e5a565b816106e257fe5b04905060005b8251811015610903576000670de0b6b3a764000061072a876060015186858151811061071057fe5b602002602001015160600151610e5a90919063ffffffff16565b8161073157fe5b04905060006107c085848151811061074557fe5b602002602001015160200151610770670de0b6b3a76400008a60200151610e5a90919063ffffffff16565b6107b26107ab89888151811061078257fe5b602002602001015160400151670de0b6b3a7640000018c60000151610e5a90919063ffffffff16565b8690610e5a565b816107b957fe5b0490611057565b905060606000600190508685815181106107d657fe5b602002602001015160800151610805578685815181106107f257fe5b6020026020010151600001518611610820565b86858151811061081157fe5b60200260200101516000015186105b1561086257505060408051808201909152601881527f507269636520746172676574206e6f7420726561636865640000000000000000602082015260006108a7565b88604001518311156108a75750506040805180820190915260208082527f496e63656e74697665206578636565647320737570706c792062616c616e63659082015260005b604051806060016040528082151581526020018381526020018887815181106108cc57fe5b60200260200101518152508960e0015186815181106108e757fe5b60200260200101819052505050505080806001019150506106e8565b5050505090565b6000610914610c79565b6004810154815491925073ffffffffffffffffffffffffffffffffffffffff9182169116146109555760405162461bcd60e51b815260040161017090611909565b61095d610e94565b61096890600061154e565b50565b61097361156f565b61097b610e94565b80548390811061098757fe5b60009182526020918290206040805160a0810182526005909302909101805483526001810154938301939093526002830154908201526003820154606082015260049091015460ff16151560808201529050919050565b60006109e861156f565b6109f0610e94565b8054859081106109fc57fe5b60009182526020918290206040805160a0810182526005909302909101805483526001810154938301939093526002830154908201526003820154606082015260049091015460ff16151560808201529050610a5784610eb8565b610a5f61147c565b610a67610cc6565b60408051608081018252825473ffffffffffffffffffffffffffffffffffffffff908116808352600185015482166020840181905260028601549092169383018490526003909401546060830152909350906000610ac484610cea565b90506000610ad3828686610d9b565b90506000610ae2838786610d9b565b9050876080015115610b2e57875181610b0384670de0b6b3a7640000610e5a565b81610b0a57fe5b041015610b295760405162461bcd60e51b815260040161017090611b6a565b610b69565b875181610b4384670de0b6b3a7640000610e5a565b81610b4a57fe5b041115610b695760405162461bcd60e51b815260040161017090611b6a565b6000670de0b6b3a7640000610b8d610b82868a89611035565b60608c015190610e5a565b81610b9457fe5b0490506000610be08a60200151610bbc670de0b6b3a764000087610e5a90919063ffffffff16565b6107b26107ab8e60400151670de0b6b3a76400000188610e5a90919063ffffffff16565b90506000610bec610c79565b5473ffffffffffffffffffffffffffffffffffffffff1690508c15610c2d57610c2d73ffffffffffffffffffffffffffffffffffffffff881682308661107c565b610c39868a8986611107565b610c45868a8a856111a9565b610c6673ffffffffffffffffffffffffffffffffffffffff891682846111c9565b5099505050505050505050505b92915050565b7fadbb89e904f74d44d0d104c851da4f2fa24de8f1dee64f038923bb940f37d53a90565b600080610ca8610cc6565b5473ffffffffffffffffffffffffffffffffffffffff161415905090565b7f8278faaeed8149083abb50630b1bee29cf32152ad9a9c9145fe4b38fa3f9c4e890565b6000610cf4610c79565b600201546040517f42dfa78900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906342dfa78990610d4b908590600401611809565b60206040518083038186803b158015610d6357600080fd5b505afa158015610d77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7391906115f7565b60006060610e3963b84c743b60e01b8585604051602401610dbd92919061182a565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915273ffffffffffffffffffffffffffffffffffffffff8716906111ed565b905080806020019051810190610e4f919061165f565b9150505b9392505050565b600082610e6957506000610c73565b82820282848281610e7657fe5b0414610e535760405162461bcd60e51b815260040161017090611a79565b7fb51bdc7cd98f38ba50227dc2098602aa9272e97c313e50af0f3c4f4f271a50c290565b6000610ec2610e94565b8054909150808310610ee65760405162461bcd60e51b8152600401610170906119d4565b600181038314610f8c57816000016001820381548110610f0257fe5b9060005260206000209060050201826000018481548110610f1f57fe5b600091825260209091208254600590920201908155600180830154908201556002808301549082015560038083015490820155600491820154910180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff90921615159190911790555b8154829080610f9757fe5b60008281526020812060057fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909301928302018181556001810182905560028101829055600381019190915560040180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690559055505050565b60006060610e3963ba37773160e01b8585604051602401610dbd92919061182a565b60006060610e3963118e31b760e01b8585604051602401610dbd92919061182a565b600082820183811015610e535760405162461bcd60e51b815260040161017090611940565b611101846323b872dd60e01b85858560405160240161109d93929190611851565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611212565b50505050565b6111a26220311b60e01b84848460405160240161112693929190611851565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915273ffffffffffffffffffffffffffffffffffffffff8616906111ed565b5050505050565b6111a2631c009d7160e01b84848460405160240161112693929190611851565b6111e88363a9059cbb60e01b848460405160240161109d929190611882565b505050565b6060610e538383604051806060016040528060278152602001611d46602791396112ae565b6060611274826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166113589092919063ffffffff16565b8051909150156111e85780806020019051810190611292919061162b565b6111e85760405162461bcd60e51b815260040161017090611c0f565b60606112b98461136f565b6112d55760405162461bcd60e51b815260040161017090611b0d565b600060608573ffffffffffffffffffffffffffffffffffffffff16856040516112fe91906117ed565b600060405180830381855af49150503d8060008114611339576040519150601f19603f3d011682016040523d82523d6000602084013e61133e565b606091505b509150915061134e828286611375565b9695505050505050565b606061136784846000856113ae565b949350505050565b3b151590565b60608315611384575081610e53565b8251156113945782518084602001fd5b8160405162461bcd60e51b815260040161017091906118f6565b6060824710156113d05760405162461bcd60e51b815260040161017090611977565b6113d98561136f565b6113f55760405162461bcd60e51b815260040161017090611bd8565b600060608673ffffffffffffffffffffffffffffffffffffffff16858760405161141f91906117ed565b60006040518083038185875af1925050503d806000811461145c576040519150601f19603f3d011682016040523d82523d6000602084013e611461565b606091505b5091509150611471828286611375565b979650505050505050565b60408051608081018252600080825260208201819052918101829052606081019190915290565b60405180610100016040528060008152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b604080516060808201835260008252602082015290810161154961156f565b905290565b508054600082556005029060005260206000209081019061096891906115a0565b6040518060a00160405280600081526020016000815260200160008152602001600081526020016000151581525090565b5b808211156115f3576000808255600182018190556002820181905560038201556004810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690556005016115a1565b5090565b600060208284031215611608578081fd5b815173ffffffffffffffffffffffffffffffffffffffff81168114610e53578182fd5b60006020828403121561163c578081fd5b8151610e5381611d37565b600060208284031215611658578081fd5b5035919050565b600060208284031215611670578081fd5b5051919050565b60008060408385031215611689578081fd5b82359150602083013561169b81611d37565b809150509250929050565b600080600080600060a086880312156116bd578081fd5b8535945060208601359350604086013592506060860135915060808601356116e481611d37565b809150509295509295909350565b73ffffffffffffffffffffffffffffffffffffffff169052565b60008282518085526020808601955080818302840101818601855b8481101561178257601f19868403018952815160e08151151585528582015181878701526117578287018261178f565b915050604080830151925061176e818701846117bb565b509985019993505090830190600101611727565b5090979650505050505050565b600081518084526117a7816020860160208601611d0b565b601f01601f19169290920160200192915050565b805182526020810151602083015260408101516040830152606081015160608301526080810151151560808301525050565b600082516117ff818460208701611d0b565b9190910192915050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b73ffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b6020808252825182820181905260009190848201906040850190845b818110156118ea576118d78385516117bb565b9284019260a092909201916001016118c4565b50909695505050505050565b600060208252610e53602083018461178f565b60208082526003908201527f4641320000000000000000000000000000000000000000000000000000000000604082015260600190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60408201527f722063616c6c0000000000000000000000000000000000000000000000000000606082015260800190565b60208082526004908201527f5450433500000000000000000000000000000000000000000000000000000000604082015260600190565b60208082526004908201527f5450433200000000000000000000000000000000000000000000000000000000604082015260600190565b60208082526004908201527f5450433300000000000000000000000000000000000000000000000000000000604082015260600190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60408201527f7700000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526004908201527f5450433100000000000000000000000000000000000000000000000000000000604082015260600190565b60208082526026908201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60408201527f6e74726163740000000000000000000000000000000000000000000000000000606082015260800190565b60208082526004908201527f5450433400000000000000000000000000000000000000000000000000000000604082015260600190565b60208082526003908201527f5350310000000000000000000000000000000000000000000000000000000000604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60408201527f6f74207375636365656400000000000000000000000000000000000000000000606082015260800190565b60a08101610c7382846117bb565b60006020825282516020830152602083015160408301526040830151606083015260608301516080830152608083015173ffffffffffffffffffffffffffffffffffffffff80821660a08501528060a08601511660c0850152505060c0830151611ce760e08401826116f2565b5060e08301516101008381015261136761012084018261170c565b90815260200190565b60005b83811015611d26578181015183820152602001611d0e565b838111156111015750506000910152565b801515811461096857600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212207c11150e6400c77096bb6a81d964ec627a061fd64463d36e1d120157beb7043164736f6c634300060c0033";

export class PNLConnector__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PNLConnector> {
    return super.deploy(overrides || {}) as Promise<PNLConnector>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PNLConnector {
    return super.attach(address) as PNLConnector;
  }
  connect(signer: Signer): PNLConnector__factory {
    return super.connect(signer) as PNLConnector__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PNLConnectorInterface {
    return new utils.Interface(_abi) as PNLConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PNLConnector {
    return new Contract(address, _abi, signerOrProvider) as PNLConnector;
  }
}
