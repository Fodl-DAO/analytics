/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ConstantFaucetResume,
  ConstantFaucetResumeInterface,
} from "../ConstantFaucetResume";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ConstantFaucetResume",
        name: "previousInstance",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOTAL_FODL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newTreasury",
        type: "address",
      },
    ],
    name: "changeTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distributeFodl",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "finishTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fodl",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "target",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405234801561001057600080fd5b50604051610b8f380380610b8f8339818101604052602081101561003357600080fd5b81019080805190602001909291905050508073ffffffffffffffffffffffffffffffffffffffff166328c18c246040518163ffffffff1660e01b815260040160206040518083038186803b15801561008a57600080fd5b505afa15801561009e573d6000803e3d6000fd5b505050506040513d60208110156100b457600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508073ffffffffffffffffffffffffffffffffffffffff166361d027b36040518163ffffffff1660e01b815260040160206040518083038186803b15801561014157600080fd5b505afa158015610155573d6000803e3d6000fd5b505050506040513d602081101561016b57600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1663d4b839926040518163ffffffff1660e01b815260040160206040518083038186803b15801561020257600080fd5b505afa158015610216573d6000803e3d6000fd5b505050506040513d602081101561022c57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508073ffffffffffffffffffffffffffffffffffffffff1663c8f33c916040518163ffffffff1660e01b815260040160206040518083038186803b1580156102b957600080fd5b505afa1580156102cd573d6000803e3d6000fd5b505050506040513d60208110156102e357600080fd5b81019080805190602001909291905050506000819055508073ffffffffffffffffffffffffffffffffffffffff16635958611e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561034057600080fd5b505afa158015610354573d6000803e3d6000fd5b505050506040513d602081101561036a57600080fd5b810190808051906020019092919050505060c081815250505060805160601c60a05160601c60c0516107cb6103c460003980610221528061046952508061036452806105c0525080610305528061044552506107cb6000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80635958611e116100665780635958611e1461012657806361d027b314610144578063b14f2a3914610178578063c8f33c91146101bc578063d4b83992146101da57610093565b806315b133291461009857806319b6beb4146100b65780631be05289146100d457806328c18c24146100f2575b600080fd5b6100a061020e565b6040518082815260200191505060405180910390f35b6100be61021d565b6040518082815260200191505060405180910390f35b6100dc61043b565b6040518082815260200191505060405180910390f35b6100fa610443565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61012e610467565b6040518082815260200191505060405180910390f35b61014c61048b565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101ba6004803603602081101561018e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104b1565b005b6101c46105b8565b6040518082815260200191505060405180910390f35b6101e26105be565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6a295be96e6406697200000081565b60007f000000000000000000000000000000000000000000000000000000000000000042106102b4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f466175636574206578706972656421000000000000000000000000000000000081525060200191505060405180910390fd5b60006102cb600054426105e290919063ffffffff16565b90506103016305a39a806102f36a295be96e640669720000008461066590919063ffffffff16565b6106eb90919063ffffffff16565b91507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff167f0000000000000000000000000000000000000000000000000000000000000000856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156103f457600080fd5b505af1158015610408573d6000803e3d6000fd5b505050506040513d602081101561041e57600080fd5b810190808051906020019092919050505050426000819055505090565b6305a39a8081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610574576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f4f6e6c7920747265617375727920616c6c6f77656420746f2063616c6c21000081525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60005481565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008282111561065a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b818303905092915050565b60008083141561067857600090506106e5565b600082840290508284828161068957fe5b04146106e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806107756021913960400191505060405180910390fd5b809150505b92915050565b6000808211610762576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b81838161076b57fe5b0490509291505056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220f3cd4104011c374df2ad902d501c00fbf295738818e2c0d69fa4b48ff746330664736f6c634300060c0033";

export class ConstantFaucetResume__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    previousInstance: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ConstantFaucetResume> {
    return super.deploy(
      previousInstance,
      overrides || {}
    ) as Promise<ConstantFaucetResume>;
  }
  getDeployTransaction(
    previousInstance: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(previousInstance, overrides || {});
  }
  attach(address: string): ConstantFaucetResume {
    return super.attach(address) as ConstantFaucetResume;
  }
  connect(signer: Signer): ConstantFaucetResume__factory {
    return super.connect(signer) as ConstantFaucetResume__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConstantFaucetResumeInterface {
    return new utils.Interface(_abi) as ConstantFaucetResumeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConstantFaucetResume {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ConstantFaucetResume;
  }
}
