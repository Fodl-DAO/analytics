/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ControlledExchanger,
  ControlledExchangerInterface,
} from "../ControlledExchanger";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "MANTISSA",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROUTER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsOut",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getPriceUpdate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "priceChangeFactor",
        type: "uint256",
      },
    ],
    name: "setPriceUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "swapExactTokensForTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMax",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "swapTokensForExactTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516116693803806116698339818101604052602081101561003357600080fd5b81019080805190602001909291905050508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250505060805160601c6115c66100a3600039806105cf52806107fc5280610a0d52506115c66000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806344a9c1fd1161005b57806344a9c1fd146103025780638803dbee14610350578063d06ca61f1461045c578063d325983c1461057357610088565b80631f00ca741461008d5780632703984c146101a457806332fe7b26146101c257806338ed1739146101f6575b600080fd5b61014d600480360360408110156100a357600080fd5b8101908080359060200190929190803590602001906401000000008111156100ca57600080fd5b8201836020820111156100dc57600080fd5b803590602001918460208302840111640100000000831117156100fe57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192905050506105cb565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610190578082015181840152602081019050610175565b505050509050019250505060405180910390f35b6101ac6107ee565b6040518082815260200191505060405180910390f35b6101ca6107fa565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102ab600480360360a081101561020c57600080fd5b8101908080359060200190929190803590602001909291908035906020019064010000000081111561023d57600080fd5b82018360208201111561024f57600080fd5b8035906020019184602083028401116401000000008311171561027157600080fd5b9091929391929390803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061081e565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102ee5780820151818401526020810190506102d3565b505050509050019250505060405180910390f35b61034e6004803603604081101561031857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108f0565b005b610405600480360360a081101561036657600080fd5b8101908080359060200190929190803590602001909291908035906020019064010000000081111561039757600080fd5b8201836020820111156103a957600080fd5b803590602001918460208302840111640100000000831117156103cb57600080fd5b9091929391929390803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610937565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561044857808201518184015260208101905061042d565b505050509050019250505060405180910390f35b61051c6004803603604081101561047257600080fd5b81019080803590602001909291908035906020019064010000000081111561049957600080fd5b8201836020820111156104ab57600080fd5b803590602001918460208302840111640100000000831117156104cd57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050610a09565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561055f578082015181840152602081019050610544565b505050509050019250505060405180910390f35b6105b56004803603602081101561058957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c2c565b6040518082815260200191505060405180910390f35b60607f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631f00ca7484846040518363ffffffff1660e01b81526004018083815260200180602001828103825283818151815260200191508051906020019060200280838360005b83811015610663578082015181840152602081019050610648565b50505050905001935050505060006040518083038186803b15801561068757600080fd5b505afa15801561069b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156106c557600080fd5b81019080805160405193929190846401000000008211156106e557600080fd5b838201915060208201858111156106fb57600080fd5b825186602082028301116401000000008211171561071857600080fd5b8083526020830192505050908051906020019060200280838360005b8381101561074f578082015181840152602081019050610734565b5050505090500160405250505090506107cf61077e8360008151811061077157fe5b6020026020010151610c2c565b6107c161079e8560018151811061079157fe5b6020026020010151610c2c565b846000815181106107ab57fe5b6020026020010151610cc890919063ffffffff16565b610d4e90919063ffffffff16565b816000815181106107dc57fe5b60200260200101818152505092915050565b670de0b6b3a764000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b606061086b87868680806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050610a09565b9050858160018151811061087b57fe5b602002602001015110156108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806115446023913960400191505060405180910390fd5b6108e685858386610dd7565b9695505050505050565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b606061098487868680806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050506105cb565b9050858160008151811061099457fe5b602002602001015111156109f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806115446023913960400191505060405180910390fd5b6109ff85858386610dd7565b9695505050505050565b60607f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d06ca61f84846040518363ffffffff1660e01b81526004018083815260200180602001828103825283818151815260200191508051906020019060200280838360005b83811015610aa1578082015181840152602081019050610a86565b50505050905001935050505060006040518083038186803b158015610ac557600080fd5b505afa158015610ad9573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015610b0357600080fd5b8101908080516040519392919084640100000000821115610b2357600080fd5b83820191506020820185811115610b3957600080fd5b8251866020820283011164010000000082111715610b5657600080fd5b8083526020830192505050908051906020019060200280838360005b83811015610b8d578082015181840152602081019050610b72565b505050509050016040525050509050610c0d610bbc83600181518110610baf57fe5b6020026020010151610c2c565b610bff610bdc85600081518110610bcf57fe5b6020026020010151610c2c565b84600181518110610be957fe5b6020026020010151610cc890919063ffffffff16565b610d4e90919063ffffffff16565b81600181518110610c1a57fe5b60200260200101818152505092915050565b6000806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610cb7576000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610cc1565b670de0b6b3a76400005b9050919050565b600080831415610cdb5760009050610d48565b6000828402905082848281610cec57fe5b0414610d43576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806115236021913960400191505060405180910390fd5b809150505b92915050565b6000808211610dc5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b818381610dce57fe5b04905092915050565b83836001818110610de457fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610e6757600080fd5b505afa158015610e7b573d6000803e3d6000fd5b505050506040513d6020811015610e9157600080fd5b810190808051906020019092919050505082600181518110610eaf57fe5b60200260200101511115610f0e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806114ff6024913960400191505060405180910390fd5b610f78333084600081518110610f2057fe5b602002602001015187876000818110610f3557fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610fe6909392919063ffffffff16565b610fe08183600181518110610f8957fe5b602002602001015186866001818110610f9e57fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166110a79092919063ffffffff16565b50505050565b6110a1846323b872dd60e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611149565b50505050565b6111448363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611149565b505050565b60606111ab826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166112389092919063ffffffff16565b9050600081511115611233578080602001905160208110156111cc57600080fd5b8101908080519060200190929190505050611232576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180611567602a913960400191505060405180910390fd5b5b505050565b60606112478484600085611250565b90509392505050565b6060824710156112ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806114d96026913960400191505060405180910390fd5b6112b4856113f9565b611326576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b602083106113765780518252602082019150602081019050602083039250611353565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146113d8576040519150601f19603f3d011682016040523d82523d6000602084013e6113dd565b606091505b50915091506113ed82828661140c565b92505050949350505050565b600080823b905060008111915050919050565b6060831561141c578290506114d1565b60008351111561142f5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561149657808201518184015260208101905061147b565b50505050905090810190601f1680156114c35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b939250505056fe416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c45786368616e676572526f757465724d6f636b2072616e206f7574206f662066756e6473536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745786368616e676572526f757465724d6f636b3a20736c69707061676520636865636b5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220f9f510684c9dcec81aac3dffd9c588382858cd18628743406795c6cf4ea6c11964736f6c634300060c0033";

export class ControlledExchanger__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _router: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ControlledExchanger> {
    return super.deploy(
      _router,
      overrides || {}
    ) as Promise<ControlledExchanger>;
  }
  getDeployTransaction(
    _router: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_router, overrides || {});
  }
  attach(address: string): ControlledExchanger {
    return super.attach(address) as ControlledExchanger;
  }
  connect(signer: Signer): ControlledExchanger__factory {
    return super.connect(signer) as ControlledExchanger__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ControlledExchangerInterface {
    return new utils.Interface(_abi) as ControlledExchangerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ControlledExchanger {
    return new Contract(address, _abi, signerOrProvider) as ControlledExchanger;
  }
}
